// AUTO GENERATED FILE, DO NOT EDIT.
//
// Generated by `package:ffigen`.
// ignore_for_file: type=lint
import 'dart:ffi' as ffi;

/// GeneralAiSpeechToTextLibraryWhisper Binding By General Corporation & Global Corporation & General Developer
class OutettsSharedBindingsByGeneralDeveloper {
  /// Holds the symbol lookup function.
  final ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
      _lookup;

  /// The symbols are looked up in [dynamicLibrary].
  OutettsSharedBindingsByGeneralDeveloper(ffi.DynamicLibrary dynamicLibrary)
      : _lookup = dynamicLibrary.lookup;

  /// The symbols are looked up with [lookup].
  OutettsSharedBindingsByGeneralDeveloper.fromLookup(
      ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
          lookup)
      : _lookup = lookup;

  int outetts_inference(
    outetts_options_t options,
  ) {
    return _outetts_inference(
      options,
    );
  }

  late final _outetts_inferencePtr =
      _lookup<ffi.NativeFunction<ffi.Int Function(outetts_options_t)>>(
          'outetts_inference');
  late final _outetts_inference =
      _outetts_inferencePtr.asFunction<int Function(outetts_options_t)>();
}

final class outetts_options_t extends ffi.Struct {
  @ffi.Int()
  external int n_threads;

  external ffi.Pointer<ffi.Char> text;

  external ffi.Pointer<ffi.Char> output_path;

  external ffi.Pointer<ffi.Char> model_vocoder_path;

  external ffi.Pointer<ffi.Char> model_path;
}
